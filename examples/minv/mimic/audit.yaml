
audit:  # Configurations for auditing
  random_seed: 1234  # Integer specifying the random seed
  data_modality: "image" #image, tabular
  attack_list:
    plgmi:
      top_n: 100 # Integer number indicating how many pseudo-labels to select
      n_dis: 5 # Integer number for indicating the number of discriminator updates per generator update
      n_iter: 5000 # Integer number for indicating the iterations for training the GAN
      batch_size: 100 # Integer number for indicating batch size for training the GAN
      gen_lr: 0.1 # Float number for indicating learning rate for training the generator
      dis_lr: 0.1 # Float number for indicating learning rate for training the discriminator
      gen_beta1: 0.0 # Float number for indicating beta1 for Adam optimizer
      gen_beta2: 0.9 # Float number for indicating beta2 for Adam optimizer
      dis_beta1: 0.0 # Float number for indicating beta1 for Adam optimizer
      dis_beta2: 0.9 # Float number for indicating beta2 for Adam optimizer
      dim_z: &dim_z 256 # Integer number for indicating the dimension of the latent space
      alpha: 1 # Float number for indicating the weight of the gradient penalty
      log_interval: 10 # Integer number for indicating the interval for logging the information
      z_optimization_iter: 500 # Integer number for indicating the iterations for optimizing the latent code
      z_optimization_lr: 0.1 # Float number for indicating the learning rate for optimizing the latent code
      num_classes: &n_cls 35
      data_format : "dataframe"
      generator:
        module_path: "./utils/CTGAN_extended.py"
        model_class: "CustomCTGAN"
        #checkpoint_path: "ctgan.pkl"
        init_params:
          embedding_dim: *dim_z
          verbose: True
          #num_classes: *n_cls
          #bottom_width: 4
      discriminator:
        #module_path: "./utils/discriminator.py"
        #model_class: "SNResNetProjectionDiscriminator"
        #checkpoint_path: "dis.pth"
        #init_params:
          #num_classes: *n_cls
  reconstruction:
    batch_size: 4000 # Integer number for indicating batch size in reconstruction
    num_class_samples: 1000 # Number of samples to generate for each class
    num_audited_classes: 35 # Number of classes to audit
    metrics:
      accuracy:
      quality_metrics:
      plot_densities:
      plot_categorical_densities:

  output_dir: "./leakpro_output"
  attack_type: "minv" #mia, gia, minv
  #data_modality: "tabular" #image, tabular

target:
  # Target model path
  module_path: "./utils/tabular_wrapper.py"
  model_class: "TabularWrapper"
  model_type: "pytorch_tabular"
  # Data paths
  target_folder: "./target"
  data_path: "./data/private_df.pkl"
  public_data_path: "./data/public_df.pkl"


